{"version":3,"sources":["api/goods.ts","GoodsList.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","getFiveFirst","a","all","sort","goodA","goodB","name","localeCompare","slice","getRed","filter","good","color","GoodsList","goods","map","className","id","App","useState","setGoods","mountedRef","useRef","useEffect","mounted","current","load","newGoods","handleButtonAllClicked","useCallback","handleButtonFiveClicked","handleButtonRedClicked","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sOAKO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,uCAAG,4BAAAC,EAAA,sEACRN,IADQ,cACpBO,EADoB,yBAGnBA,EACJC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,KAAKC,cAAcF,EAAMC,SACtDE,MAAM,EAAG,IALc,2CAAH,qDAQZC,EAAM,uCAAG,4BAAAR,EAAA,sEACFN,IADE,cACdO,EADc,yBAGbA,EAAIQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,UAHX,2CAAH,qD,eCXNC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAJ,GAAI,OACb,oBAEE,UAAQ,OACRK,UAAS,gBAAWL,EAAKC,OAH3B,SAKGD,EAAKL,MAJDK,EAAKM,UCCLC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOL,EAAP,KAAcM,EAAd,KACMC,EAAaC,kBAAO,GAE1BC,qBAAU,WACR,IAAIC,GAAU,EAEdH,EAAWI,SAAU,EAErB,IAAMC,EAAI,uCAAG,4BAAAzB,EAAA,sEACYN,IADZ,OACLgC,EADK,OAGPH,GACFJ,EAASO,GAJA,2CAAH,qDAUV,OAFAD,IAEO,WACLF,GAAU,EACVH,EAAWI,SAAU,KAEtB,IAEH,IAAMG,EAAyBC,sBAAW,sBAAC,4BAAA5B,EAAA,sEAClBN,IADkB,OACnCgC,EADmC,OAGrCN,EAAWI,SACbL,EAASO,GAJ8B,2CAMxC,IAEGG,EAA0BD,sBAAW,sBAAC,4BAAA5B,EAAA,sEACnBD,IADmB,OACpC2B,EADoC,OAGtCN,EAAWI,SACbL,EAASO,GAJ+B,2CAMzC,IAEGI,EAAyBF,sBAAW,sBAAC,4BAAA5B,EAAA,sEAClBQ,IADkB,OACnCkB,EADmC,OAGrCN,EAAWI,SACbL,EAASO,GAJ8B,2CAMxC,IAEH,OACE,sBAAKX,UAAU,MAAf,UACE,uDAEA,wBACEgB,KAAK,SACL,UAAQ,aACRC,QAASL,EAHX,4BAQA,wBACEI,KAAK,SACL,UAAQ,oBACRC,QAASH,EAHX,gCAQA,wBACEE,KAAK,SACL,UAAQ,aACRC,QAASF,EAHX,4BAQA,cAAC,EAAD,CAAWjB,MAAOA,QCtFxBoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ba3b6743.chunk.js","sourcesContent":["import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\r\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const getFiveFirst = async (): Promise<Good[]> => {\n  const all = await getAll();\n\n  return all\n    .sort((goodA, goodB) => goodA.name.localeCompare(goodB.name))\n    .slice(0, 5);\n};\n\nexport const getRed = async (): Promise<Good[]> => {\n  const all = await getAll();\n\n  return all.filter(good => good.color === 'red');\n};\n","import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className={`good--${good.color}`}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import React, {\n  useCallback, useEffect, useRef, useState,\n} from 'react';\nimport { getFiveFirst, getAll, getRed } from './api/goods';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\n// import { getAll, get5First, getRed } from './api/goods';\n// or\n// import * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const mountedRef = useRef(false);\n\n  useEffect(() => {\n    let mounted = true;\n\n    mountedRef.current = true;\n\n    const load = async (): Promise<void> => {\n      const newGoods = await getAll();\n\n      if (mounted) {\n        setGoods(newGoods);\n      }\n    };\n\n    load();\n\n    return () => {\n      mounted = false;\n      mountedRef.current = false;\n    };\n  }, []);\n\n  const handleButtonAllClicked = useCallback(async (): Promise<void> => {\n    const newGoods = await getAll();\n\n    if (mountedRef.current) {\n      setGoods(newGoods);\n    }\n  }, []);\n\n  const handleButtonFiveClicked = useCallback(async (): Promise<void> => {\n    const newGoods = await getFiveFirst();\n\n    if (mountedRef.current) {\n      setGoods(newGoods);\n    }\n  }, []);\n\n  const handleButtonRedClicked = useCallback(async (): Promise<void> => {\n    const newGoods = await getRed();\n\n    if (mountedRef.current) {\n      setGoods(newGoods);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={handleButtonAllClicked}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={handleButtonFiveClicked}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={handleButtonRedClicked}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}